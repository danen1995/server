/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.silab.gui.example1.form;

import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import rs.ac.bg.fon.silab.gui.example1.components.table.model.KupacTableModel;
import rs.ac.bg.fon.silab.gui.example1.components.table.model.PorudzbinaTableModel;
import rs.ac.bg.fon.silab.gui.example1.components.table.model.PorudzbineTableModel;
import rs.ac.bg.fon.silab.gui.example1.components.table.model.ProizvodTableModel;
import rs.ac.bg.fon.silab.gui.example1.controller.Controller;
import rs.ac.bg.fon.silab.jdbc.example1.domen.IDomainEntity;
import rs.ac.bg.fon.silab.jdbc.example1.domen.KupacEntity;
import rs.ac.bg.fon.silab.jdbc.example1.domen.PorudzbinaEntity;
import rs.ac.bg.fon.silab.jdbc.example1.domen.ProizvodEntity;

/**
 *
 * @author Antic
 */
public class FPretragaPorudzbina extends javax.swing.JDialog {

    /**
     * Creates new form FPretragaKupaca
     */
    public FPretragaPorudzbina(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        popuniTabeluPorudzbina();
        setLocationRelativeTo(null);
        pripremiZaPretragu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePorudzbine = new javax.swing.JTable();
        jButtonDetalji = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldKriterijum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxFilter = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTablePorudzbine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTablePorudzbine);

        jButtonDetalji.setText("Detalji");
        jButtonDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDetaljiActionPerformed(evt);
            }
        });

        jLabel1.setText("Unesi kriterijum pretrage:");

        jLabel2.setText("Filter:");

        jComboBoxFilter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bez filtera", "U obradi", "Otpremljene", "Dostavljene" }));
        jComboBoxFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxFilterItemStateChanged(evt);
            }
        });
        jComboBoxFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonDetalji)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldKriterijum, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(jComboBoxFilter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDetalji)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDetaljiActionPerformed
        int selectedRow = jTablePorudzbine.getSelectedRow();
        if (selectedRow >= 0) {
            Long idPor = (Long)jTablePorudzbine.getValueAt(selectedRow, 0);
            JOptionPane.showMessageDialog(null, "Sistem je nasao podatke o izabranoj porudzbini. Izabrana porudzbina ima ID: " + idPor);

            JDialog fPacijent = new FPorudzbina(null, true, idPor);
            fPacijent.setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Sistem ne moze da nadje podatke o izabranoj porudzbini.");
        }
    }//GEN-LAST:event_jButtonDetaljiActionPerformed

    private void jComboBoxFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxFilterItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED)
            {
                if(jComboBoxFilter.getSelectedItem().toString().equals("Bez filtera")){
                    popuniTabeluPorudzbina();
                    pripremiZaPretragu();
                    
                    System.out.println("AAA");
                }
                if(jComboBoxFilter.getSelectedItem().toString().equals("U obradi")){
                    popuniTabeluPorudzbinaFilter("U pripremi");
                    pripremiZaPretragu();
                }
                if(jComboBoxFilter.getSelectedItem().toString().equals("Otpremljene")){
                    popuniTabeluPorudzbinaFilter("Otpremljeno");
                    pripremiZaPretragu();
                }
                if(jComboBoxFilter.getSelectedItem().toString().equals("Dostavljene")){
                    popuniTabeluPorudzbinaFilter("Dostavljeno");
                    pripremiZaPretragu();
                }
            }
    }//GEN-LAST:event_jComboBoxFilterItemStateChanged

    private void jComboBoxFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxFilterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDetalji;
    private javax.swing.JComboBox jComboBoxFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePorudzbine;
    private javax.swing.JTextField jTextFieldKriterijum;
    // End of variables declaration//GEN-END:variables

     private void popuniTabeluPorudzbina() {
        try {
            List<PorudzbinaEntity> porudzbinaLista=new ArrayList<>();
            List<PorudzbinaEntity> porudzbine = Controller.ucitajPorudzbine();
            for (IDomainEntity iDomainEntity : porudzbine) {
                porudzbinaLista.add((PorudzbinaEntity)iDomainEntity);
            }
            TableModel tm = new PorudzbineTableModel(porudzbinaLista);
            jTablePorudzbine.setModel(tm);
        } catch (Exception ex) {
            Logger.getLogger(FPretragaPorudzbina.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

     private void pripremiZaPretragu() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(jTablePorudzbine.getModel());
        jTablePorudzbine.setRowSorter(rowSorter);

        jTextFieldKriterijum.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                String filterCity = jTextFieldKriterijum.getText();

                if (filterCity.trim().length() == 0) {
                    rowSorter.setRowFilter(null); 
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + filterCity));
                }
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                String text = jTextFieldKriterijum.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    private void popuniTabeluPorudzbinaFilter(String filter) {
         try {
            String filterPretraga = " WHERE porudzbina.status = '"+filter+"'";
            List<PorudzbinaEntity> porudzbinaLista = Controller.ucitajPorudzbineFilter(filterPretraga);
             for (PorudzbinaEntity porudzbinaEntity : porudzbinaLista) {
                 System.out.println(porudzbinaEntity);
             }
//            if(porudzbinaLista.size()>0){
                System.out.println(porudzbinaLista.size());
                PorudzbineTableModel tm = new PorudzbineTableModel(porudzbinaLista);
                jTablePorudzbine.setModel(tm);
//            }
        } catch (Exception ex) {
            Logger.getLogger(FPretragaPorudzbina.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
}
